* UNIS
UNIS and the MS (also included in this codebase) are a part of the
Periscope measurement framework which also includes BLiPP. You can
find more information about all these components [[https://github.com/GENI-GEMINI/GEMINI/wiki][here]].

[[https://travis-ci.org/periscope-ps/unis][file:https://travis-ci.org/periscope-ps/unis.svg?branch=master]]

** Installation
*** For Debian, but should adapt to any linux flavor
First, you'll need a few basic things
#+BEGIN_SRC
$ sudo apt-get install python-setuptools python-dev redis-server python-dateutil
#+END_SRC

You might also need swig
#+BEGIN_SRC
$ sudo apt-get install swig
#+END_SRC

UNIS requires several third-party python packages, install these with pip.  If you do not have pip installed, follow the instructions here: https://pip.pypa.io/en/latest/installing.html
#+BEGIN_SRC
$ pip install tornado dateutil
#+END_SRC

UNIS and the MS use ABAC for authentication purposes.  Install ABAC by following the instructions found here:
http://abac.deterlab.net/

Now run the setup script in top level of the repository. You can use
=--prefix= or =--install-dir= to install it somewhere other than the
default location. The default usually requires using sudo.
#+BEGIN_SRC
$ python setup.py install
#+END_SRC

You can attempt to run it
#+BEGIN_SRC
$ periscoped
#+END_SRC

or to run it straight from the repository
#+BEGIN_SRC
$ python periscope/app.py
#+END_SRC

Either of which will start it running on port 8888.

You may encounter problems related to AUTH or GEMINI specific files, I'll try to cover these.

*** For Redhat, create RPM...
#+BEGIN_SRC
python setup.py bdist_rpm
#+END_SRC
The dependencies are configured in setup.cfg.

*** m2crypto issue
If you see something like
#+BEGIN_SRC
ImportError: /usr/local/lib/python2.7/dist-packages/M2Crypto-0.21.1-py2.7-linux-x86_64.egg/M2Crypto/__m2crypto.so: undefined symbol: SSLv2_method
#+END_SRC

You're probably running Ubuntu - try installing python-m2crypto from apt-get.
#+BEGIN_SRC
$ sudo apt-get install python-m2crypto
#+END_SRC

Now remove the version of M2Crypto that Periscope was complaining
about. In the example above, that would mean doing.
#+BEGIN_SRC
$ rm -r /usr/local/lib/python2.7/dist-packages/M2Crypto-0.21.1-py2.7-linux-x86_64.egg/
#+END_SRC

Now if you try =python periscope/app.py= again, you should be in
business. Or at least you should get some errors that have to do with
your config. Running with SSL or ABAC turned on may require some
additional packages. See the configuration section.

*** MongoDB issue
If you face the following error probably you haven't installed mongodb
#+BEGIN_SRC
event=netlogger.periscope.Failed to connect to the MongoDB service - [Errno 111] Connection refused level=Error
#+END_SRC
please install mongodb mentioned in the following tutorial [[https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/][MongoDB-installation-ubuntu]]


** Special note on ABAC 
For enabling Auth, we need to install libabac from http://abac.deterlab.net/src/abac-0.1.9.tar.gz and do ~./configure~ , ~make~ and ~make install~ on it. This will also install creddy which can be used to generate the certificates and attribute rules.

** Using Creddy to create ABAC rules 
*** Generating a key pair
#+BEGIN_SRC
creddy --generate --cn <cnname>
#+END_SRC

*** Assigning an attribute to a principal by another principal
Normally a main principal assigns attribute to each user 
Something A <- B.b1
#+BEGIN_SRC
creddy --attribute --issuer <A_ID.pem> --key <A_private.pem> --role srand --subject-cert <B_ID.pem> --out <out.der>
#+END_SRC

*** Delegating principal to another role
Creating a rule like A.a1 <- B.a2
#+BEGIN_SRC
creddy --attribute --issuer <A_ID.pem> --key <A_private.pem> --role srand --subject-cert <B_ID.pem> --subject-role <somerole> --out <out.der>
#+END_SRC

*** Verifying
Verfication can be done by using crudge Webstart app on the folder of certificates

** Configuration
Mostly done by editing periscope/settings.py

Inside you can enable or disable the MS, enable or disable SSL, and
ABAC.

For quick testing, find the corresponding variables in settings.py
and make them look like so:
#+BEGIN_SRC python
ENABLE_SSL = False
MS_ENABLE = True
ENABLE_AUTH = False
#+END_SRC
